# Navico Clang-Format Rules
# Refer to http://clang.llvm.org/docs/ClangFormatStyleOptions.html for information on the options,
# or to the Navico CodingStyleStandard document for information on the rules.
# Version: 2.0 (16/3/2018)
# Requires LLVM version 6.0.0 or later.

# General Options
Language: Cpp
Standard: Cpp11
TabWidth: 4
UseTab: Never
ColumnLimit: 140
PointerAlignment: Left

# Whitespace Settings
MaxEmptyLinesToKeep: 2
ReflowComments: false
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeParens: ControlStatements
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles:  false
SpacesInContainerLiterals: true
SpacesInCStyleCastParentheses: false
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Single/Multiline Collapse/Expansion
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: InlineOnly
AllowShortIfStatementsOnASingleLine: false
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: true
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom
BreakConstructorInitializersBeforeComma: true
BreakConstructorInitializers: BeforeColon
BreakAfterJavaFieldAnnotations: false
BreakBeforeInheritanceComma: false
BreakBeforeTernaryOperators: true
BreakStringLiterals: true
BinPackArguments: false
BinPackParameters: false
BraceWrapping:   
  AfterClass:      true
  AfterControlStatement: true
  AfterEnum:       true
  AfterFunction:   true
  AfterNamespace:  true
  AfterObjCDeclaration: true
  AfterStruct:     true
  AfterUnion:      true
  AfterExternBlock: true
  BeforeCatch:     true
  BeforeElse:      true
  IndentBraces:    false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true  
ConstructorInitializerAllOnOneLineOrOnePerLine: true

# Indentation Offsets
AccessModifierOffset: -4
AlignAfterOpenBracket: AlwaysBreak
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignEscapedNewlines: DontAlign
AlignOperands: true
AlignTrailingComments: true
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
IndentCaseLabels: false
IndentPPDirectives: None
IndentWidth: 4
IndentWrappedFunctionNames: false
NamespaceIndentation: None

# Other features
FixNamespaceComments: true

# Penalties
PenaltyReturnTypeOnItsOwnLine: 10000

# Include Order
SortIncludes: true
IncludeBlocks: Regroup
IncludeCategories:
  # C++ Utilities
  - Regex:           '^[<](typeinfo|typeindex|type_traits|bitset|functional|utility|chrono|initializer_list|tuple|any|optional|variant)'
    Priority:        180
  # C++ Dynamic memory management
  - Regex:           '^[<](new|memory|scoped_allocator|memory_resource)[">]$'
    Priority:        181
  # C++ Numeric limits and Error handling
  - Regex:           '^[<](limits|exception|stdexcept|system_error)[">]$'
    Priority:        182
  # C++ Strings and Containers libraries
  - Regex:           '^[<](string|string_view|array|vector|deque|list|forward_list|set|map|unordered_set|unordered_map|stack|queue)'
    Priority:        183
  # C++ versions of C libraries
  - Regex:           '^[<]c(complex|errno|fenv|float|inttypes|iso646|limits|locale|math|setjmp|signal|stdalign|stdarg|stdatomic|stdbool|stddef|stdint|stdio|stdlib|stdnoreturn|string|tgmath|threads|time|uchar|wchar|wctype)'
    Priority:        190
  # C libraries
  - Regex:           '^[<](complex|errno|fenv|float|inttypes|iso646|limits|locale|math|setjmp|signal|stdalign|stdarg|stdatomic|stdbool|stddef|stdint|stdio|stdlib|stdnoreturn|string|tgmath|threads|time|uchar|wchar|wctype)\.h'
    Priority:        191
  # Boost libraries
  - Regex:           '^[<]boost/'
    Priority:        192
  # Qt libraries
  - Regex:           '^[<]Q[A-Z][A-Za-z]'
    Priority:        200
  - Regex:           '^[<]Qt[A-Z][A-Za-z]'
    Priority:        201
  # Other libraries
  - Regex:           '^["<].*[*>]$'
    Priority:        202
  - Regex:           '^.*$'
    Priority:        1

    
